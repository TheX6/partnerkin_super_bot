require('dotenv').config();
const { Client } = require('pg');
const config = require('./config');

const client = new Client({
    host: config.DATABASE.postgres.host,
    port: config.DATABASE.postgres.port,
    database: config.DATABASE.postgres.database,
    user: config.DATABASE.postgres.user,
    password: config.DATABASE.postgres.password
});

async function addUniqueConstraint() {
    try {
        await client.connect();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ PostgreSQL');
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
        const constraintCheck = await client.query(`
            SELECT constraint_name 
            FROM information_schema.table_constraints 
            WHERE table_name = 'admins' 
            AND constraint_type = 'UNIQUE'
            AND constraint_name LIKE '%telegram_id%'
        `);
        
        if (constraintCheck.rows.length > 0) {
            console.log('‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ telegram_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        } else {
            console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ telegram_id...');
            // –î–æ–±–∞–≤–∏–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
            await client.query('ALTER TABLE admins ADD CONSTRAINT admins_telegram_id_unique UNIQUE (telegram_id);');
            console.log('‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
        }
        
        console.log('üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∫–æ–º–∞–Ω–¥–∞ partnerkin1212 –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.');
    } catch (err) {
        if (err.code === '42710') { // duplicate column
            console.log('‚úÖ –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞:', err);
        }
    } finally {
        await client.end();
    }
}

addUniqueConstraint();