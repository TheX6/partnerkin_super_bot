// transfer_files.js - –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É —Ç–∞–ø–∞–ª–∫–∏

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const sourceFiles = {
    database: path.join(__dirname, 'database.js'),
    config: path.join(__dirname, 'config.js')
};

// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Ç–∞–ø–∞–ª–∫–∏
const targetDir = '/home/oleg/partnerkino-clicker-temp';

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
function copyFiles() {
    console.log('–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É —Ç–∞–ø–∞–ª–∫–∏...');
    
    try {
        // –ö–æ–ø–∏—Ä—É–µ–º database.js
        if (fs.existsSync(sourceFiles.database)) {
            const sourceDatabase = fs.readFileSync(sourceFiles.database, 'utf8');
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è —Ç–∞–ø–∞–ª–∫–∏ (—É–¥–∞–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞)
            const databaseForClicker = sourceDatabase.replace(
                /const config = require\('\.\/config'\);/,
                `const config = require('./config');`
            );
            fs.writeFileSync(path.join(targetDir, 'database.js'), databaseForClicker);
            console.log('‚úÖ database.js —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('‚ùå –§–∞–π–ª database.js –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
        }
        
        // –ö–æ–ø–∏—Ä—É–µ–º config.js
        if (fs.existsSync(sourceFiles.config)) {
            const sourceConfig = fs.readFileSync(sourceFiles.config, 'utf8');
            fs.writeFileSync(path.join(targetDir, 'config.js'), sourceConfig);
            console.log('‚úÖ config.js —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('‚ùå –§–∞–π–ª config.js –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º package.json –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è pg
        const packageJsonPath = path.join(targetDir, 'package.json');
        if (fs.existsSync(packageJsonPath)) {
            const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
            packageJson.dependencies = packageJson.dependencies || {};
            if (!packageJson.dependencies.pg) {
                packageJson.dependencies.pg = "^8.11.3";
                packageJson.dependencies.dotenv = "^16.6.1";
            }
            fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
            console.log('‚úÖ package.json –æ–±–Ω–æ–≤–ª–µ–Ω');
        } else {
            console.error('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ —Ç–∞–ø–∞–ª–∫–∏');
        }
        
        console.log('\nüìÅ –í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø–∞–ø–∫—É —Ç–∞–ø–∞–ª–∫–∏!');
        console.log('\n‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±–Ω–æ–≤–∏—Ç—å clicker-app.js –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
        console.log('   –¢–∞–∫–∂–µ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ Render –∑–∞–¥–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è PostgreSQL.');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤:', error);
    }
}

copyFiles();