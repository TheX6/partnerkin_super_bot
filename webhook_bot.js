// webhook_bot.js - –ü–†–û–°–¢–ê–Ø —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¢–û–õ–¨–ö–û –¥–ª—è webhook
require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const express = require('express');

const token = process.env.TELEGRAM_TOKEN;
const PORT = process.env.PORT || 10000;
const WEBHOOK_URL = process.env.RENDER_EXTERNAL_URL || 'https://partnerkin-superbot2.onrender.com';

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –ë–ï–ó polling
const bot = new TelegramBot(token, { polling: false });

// –°–æ–∑–¥–∞–µ–º Express —Å–µ—Ä–≤–µ—Ä
const app = express();
app.use(express.json());

// Health check
app.get('/health', (req, res) => {
    res.json({
        status: 'OK',
        timestamp: new Date().toISOString(),
        uptime: process.uptime(),
        service: 'partnerkin-bot-webhook'
    });
});

// Webhook endpoint - catch ANY /bot* path
app.post('/bot*', (req, res) => {
    bot.processUpdate(req.body);
    res.sendStatus(200);
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
    res.send(`
        <!DOCTYPE html>
        <html>
        <head><title>–ü–∞—Ä—Ç–Ω–µ—Ä–∫–∏–Ω–æ –ë–æ—Ç</title></head>
        <body style="font-family: sans-serif; text-align: center; padding: 50px;">
            <h1>ü§ñ –ü–∞—Ä—Ç–Ω–µ—Ä–∫–∏–Ω–æ –ë–æ—Ç</h1>
            <p>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ webhook</p>
            <a href="https://t.me/partnerkin_super_bot" style="display: inline-block; background: #0088cc; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px;">–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram</a>
        </body>
        </html>
    `);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é –Ω–∞ webhook!\n\n‚úÖ –ë–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω.');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
    if (msg.text && !msg.text.startsWith('/')) {
        bot.sendMessage(msg.chat.id, `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: ${msg.text}`);
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, async () => {
    console.log(`üåê Server running on port ${PORT}`);
    console.log(`üîó Webhook URL: ${WEBHOOK_URL}`);

    try {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
        const webhookUrl = `${WEBHOOK_URL}/bot${token}`;
        await bot.setWebHook(webhookUrl);
        console.log(`‚úÖ Webhook set successfully!`);

        const info = await bot.getWebHookInfo();
        console.log(`üì° Webhook info:`, info);
    } catch (error) {
        console.error(`‚ùå Webhook error:`, error.message);
    }
});

console.log('üöÄ Webhook bot starting...');
